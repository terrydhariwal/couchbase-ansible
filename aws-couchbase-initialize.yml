# ansible-playbook --inventory-file=aws_ansible_hosts.ini -u ec2-user ./aws-couchbase-initialize.yml
# ansible-playbook --inventory-file=aws_ansible_hosts.ini -u ec2-user ./aws-couchbase-initialize.yml -vvvv

---
- name: Install libcouchbase
  hosts: app_servers
  gather_facts: false
  sudo: true
  tasks:
  # - name: download libcouchbase
  #   get_url: 
  #     url=http://packages.couchbase.com/clients/c/couchbase-csdk-setup
  #     dest=/home/ec2-user/couchbase-csdk-setup
  #     force=no
  - name: Copy modified shell scriptinstalling libcouchbase
    action: template src=couchbase-csdk-setup.pl dest=/home/ec2-user/couchbase-csdk-setup mode=750

  - name: Install perl dependency
    yum: name=perl state=present

  - name: install libcouchbase
    shell: sudo yes | perl /home/ec2-user/couchbase-csdk-setup

- name: Download Couchbase Binary
  hosts: all
  # user: ec2-user
  gather_facts: false 
  sudo: true
  tasks:
  - name: download Couchbase package
    get_url: 
      url=http://packages.couchbase.com/releases/3.0.3/couchbase-server-enterprise-3.0.3-centos6.x86_64.rpm 
      dest=/home/ec2-user/couchbase-server-enterprise.rpm
      force=no

- name: Couchbase Installation
  hosts: all
  # user: ec2-user
  gather_facts: false 
  sudo: true
  tasks:
  - name: disable iptables firewall
    # These do not work 
    # - name: disable iptables to autostart on boot
    #   command: chkconfig iptables off
    # service: name=iptables state=stopped
    # service: name=ip6tables state=stopped
    action: service name=iptables state=stopped enabled=no # this works 

  - name: disable ip6tables firewall
    action: service name=ip6tables state=stopped enabled=no # this works 

  - name: Install dependencies #causing an issue
    yum: name=openssl098e state=present
    # - name: Install Couchbase .deb file on all machines //Shell is not idempotent
    #   shell: rpm --install /vagrant/couchbase-server-enterprise-3.0.3-centos6.x86_64.rpm
  - name: Install Couchbase .rpm file on all machines
    yum: name=/home/ec2-user/couchbase-server-enterprise.rpm state=present

  - name: Set swappiness to 0
    # Set vm.swappiness to 0 in /etc/sysctl.conf
    sysctl: name=vm.swappiness value=0 state=present

  - name: disable THP inproc and permenantly 1
    # Add a line to a file if it does not exist, without passing regexp 
    lineinfile: dest=/etc/rc.local line="for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done"

  - name: disable THP inproc and permenantly 2
    lineinfile: dest=/etc/rc.local line="for i in /sys/kernel/mm/*transparent_hugepage/defrag; do echo never > $i; done"

  - name: disable THP inproc and permenantly 3
    shell: for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done
  
  - name: disable THP inproc and permenantly 4
    shell: for i in /sys/kernel/mm/*transparent_hugepage/defrag; do echo never > $i; done

- name: Initialize the cluster and add the nodes to the cluster
  hosts: master
  # user: ec2-user
  gather_facts: false 
  sudo: true 
  tasks:
  - name: check couchbase has started
    service: name=couchbase-server state=started
  - pause: seconds=10

  - name: Configure main node's hostname
    shell: /opt/couchbase/bin/couchbase-cli node-init -c 127.0.0.1:8091 --node-init-hostname={% for host in groups['master'] %}{{ hostvars[host]['ansible_ssh_host'] }}{% endfor %} -u {{admin_user}} -p {{admin_password}}
    ignore_errors: yes

  - name: Configure cluster using the main node
    shell: /opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1:8091  --cluster-init-username={{admin_user}} --cluster-init-password={{admin_password}} --cluster-init-port=8091 --cluster-init-ramsize={{cluster_ram_quota}} -u {{admin_user}} -p {{admin_password}}
    ignore_errors: yes
    register: configure_main_node
  - debug: var=configure_main_node.stdout_lines

  - name: Create shell script for configuring main node
    action: template src=couchbase-add-nodes.j2 dest=/tmp/addnodes.sh mode=750

  - name: Launch config script
    action: shell /tmp/addnodes.sh

  - name: Rebalance the cluster
    shell: /opt/couchbase/bin/couchbase-cli rebalance -c 127.0.0.1:8091 -u {{admin_user}} -p {{admin_password}}

  - name: create bucket {{bucket_name}} with {{num_replicas}} replicas
    shell: /opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 --bucket={{bucket_name}} --bucket-type=couchbase --bucket-port=11211 --bucket-ramsize={{bucket_ram_quota}}  --bucket-replica={{num_replicas}} -u {{admin_user}} -p {{admin_password}}

  - name: COUCHBASE INSTALL COMPLETE
    debug: msg="Couchbase is installed and ready http://{% for host in groups['master'] %}{{ hostvars[host]['ansible_ssh_host'] }}{% endfor %}:8091"
